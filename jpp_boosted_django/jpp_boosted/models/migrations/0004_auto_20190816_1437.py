# Generated by Django 2.2.4 on 2019-08-16 14:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('models', '0003_brand_part_project_state_timeperformancemeasurement_timeperformancemeasurementdevice'),
    ]

    operations = [
        migrations.CreateModel(
            name='DynoMeasurementDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('owner', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TrackMeasurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('duration', models.TimeField()),
                ('highest_speed', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TrackPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.Track')),
            ],
        ),
        migrations.AddField(
            model_name='state',
            name='parts',
            field=models.ManyToManyField(to='models.Part'),
        ),
        migrations.AddField(
            model_name='timeperformancemeasurement',
            name='state',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='models.State'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='TrackPartMeasurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('duration', models.TimeField()),
                ('highest_speed', models.PositiveIntegerField()),
                ('track_measurement', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='models.TrackMeasurement')),
                ('track_part', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='models.TrackPart')),
            ],
        ),
        migrations.AddField(
            model_name='trackmeasurement',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='models.State'),
        ),
        migrations.AddField(
            model_name='trackmeasurement',
            name='track',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='models.Track'),
        ),
        migrations.AddField(
            model_name='trackmeasurement',
            name='youtubevideo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='models.YouTubeVideo'),
        ),
        migrations.CreateModel(
            name='DynoMeasurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('horse_power', models.PositiveIntegerField()),
                ('newtonmeter', models.PositiveIntegerField()),
                ('temperature', models.DecimalField(decimal_places=2, max_digits=5)),
                ('dyno_device', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='models.DynoMeasurementDevice')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='models.State')),
            ],
        ),
    ]
